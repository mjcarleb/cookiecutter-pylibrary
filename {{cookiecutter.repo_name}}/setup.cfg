{%- if cookiecutter.c_extension_support == "no" -%}
[bdist_wheel]
universal = 1

{% endif -%}
{%- if cookiecutter.linter == "flake8" %}
[flake8]
max-line-length = 140
exclude = */migrations/*
{%- else %}
[pylama]
format = pylint
skip = */migrations/*

[pylama:pycodestyle]
max_line_length = 140
{%- endif %}

{% if cookiecutter.test_runner == "pytest" -%}
[tool:pytest]
{%- if cookiecutter.test_matrix_separate_coverage == 'yes' %}
norecursedirs =
    .git
    .tox
    .env
    dist
    build
    migrations
{% else %}
testpaths =
    tests
    {{ cookiecutter.package_name }}
norecursedirs =
    migrations
{% endif %}
python_files =
    test_*.py
    *_test.py
    tests.py
addopts =
    -ra
    --strict
    --cov={{ cookiecutter.package_name }}
    --cov-branch
    --pyarg
{%- if cookiecutter.test_matrix_separate_coverage == 'yes' %}
    --ignore=docs/conf.py
    --ignore=setup.py
    --ignore=ci
    --ignore=.eggs
{%- endif %}
    --doctest-modules
    --doctest-glob=\*.rst
    --tb=short

{% elif cookiecutter.test_runner == "nose" -%}
[nosetests]
verbosity = 2

{% endif -%}
[isort]
force_single_line = True
line_length = 120
known_first_party = {{ cookiecutter.package_name }}
default_section = THIRDPARTY
forced_separate = test_{{ cookiecutter.package_name }}
not_skip = __init__.py
skip = migrations
{%- if cookiecutter.test_matrix_configurator == "yes" %}

[matrix]
# This is the configuration for the `./bootstrap.py` script.
# It generates `.travis.yml`, `tox.ini` and `appveyor.yml`.
#
# Syntax: [alias:] value [!variable[glob]] [&variable[glob]]
#
# alias:
#  - is used to generate the tox environment
#  - it's optional
#  - if not present the alias will be computed from the `value`
# value:
#  - a value of "-" means empty
# !variable[glob]:
#  - exclude the combination of the current `value` with
#    any value matching the `glob` in `variable`
#  - can use as many you want
# &variable[glob]:
#  - only include the combination of the current `value`
#    when there's a value matching `glob` in `variable`
#  - can use as many you want

python_versions =
    py27
    py34
    py35
    py36
    py37
    pypy
    pypy3

dependencies =
#    1.4: Django==1.4.16 !python_versions[py3*]
#    1.5: Django==1.5.11
#    1.6: Django==1.6.8
#    1.7: Django==1.7.1 !python_versions[py26]
# Deps commented above are provided as examples. That's what you would use in a Django project.

{% if cookiecutter.test_matrix_separate_coverage == 'yes' -%}
coverage_flags =
    cover: true
    nocov: false
{% endif -%}

environment_variables =
    -
{% endif -%}
